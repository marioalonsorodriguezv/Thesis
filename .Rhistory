str(anscombe)
# See its data (or click on name in Workspace)
anscombe
rivers
hist(rivers)
r <- rivers
r <- data.frame(rivers)
View(r)
boxplot(rivers, horizontal = TRUE)
boxplot.stats(rivers)
rivers.low  <- rivers[rivers < 1210]  # Remove outliers
boxplot(rivers.low, horizontal = TRUE)  # Has new outliers
boxplot.stats(rivers.low)
rivers.low2  <- rivers[rivers < 1055]  # Remove again
boxplot(rivers.low2)  # Still one outlier
rm(list = ls())  # Clean up
# Load Data
require("datasets")
# The areas in thousands of square miles of the
# landmasses which exceed 10,000 square miles.
?islands
islands
hist(islands, breaks = 16)
boxplot(islands)
islands.z <- scale(islands)  # M = 0, SD = 1
View(islands.z)
islands.z
hist(islands.z, breaks = 16)  # Histogram of z-scores
boxplot(islands.z)  # Boxplot of z-scores
mean(islands.z)  # M should equal 0
round(mean(islands.z), 2)  # Round off to see M = 0
islands.z
sd(islands.z)  # SD = 1
attr(islands.z, "scaled:center")  # Show original mean
islands.z <- as.numeric(islands.z)  # Converts from matrix back to numeric
islands.z
Load Data
require("datasets")
# The areas in thousands of square miles of the
# landmasses which exceed 10,000 square miles.
?islands
islands
hist(islands, breaks = 16)
boxplot(islands)
# z-scores
islands.z <- scale(islands)  # M = 0, SD = 1
islands.z  # Makes m
View(islands.z)
islands.z <- as.numeric(islands.z)  # Converts from matrix back to numeric
islands.z
islands.ln <- log(islands)  # Natural log (base = e)
hist(islands.ln)
boxplot(islands.ln)
islands.rank1 <- rank(islands)
hist(islands.rank1)
boxplot(islands.rank1)
islands.rank2 <- rank(islands, ties.method = "random")
hist(islands.rank2)
boxplot(islands.rank2)
continent <- ifelse(islands > 1000, 1, 0)
continent
rn1 <- rnorm(1000000)
hist(rn1)
summary(rn1)
# Create variable rn2 with 1 million random normal values
rn2 <- rnorm(1000000)
hist(rn2)
summary(rn2)
# Average scores across two variables
rn.mean <- (rn1 + rn2)/2
hist(rn.mean)
# Multiply scores across two variables
rn.prod <- rn1 * rn2
hist(rn.prod)
summary(rn.prod)
# Kurtosis comparisons
# The package "moments" gives kurtosis where a
# mesokurtic, normal distribution has a value of 3.
# The package "psych" recenters the kurtosis values
# around 0, which is more common now.
install.packages("psych")
help(package = "psych")
install.packages("psych")
require("psych")
kurtosi(rn1)
kurtosi(rn2)
kurtosi(rn.mean)
kurtosi(rn.prod)  # Similar to Cauchy distribution
rm(list = ls())
# R Statistics Essential Training
# Ex04_04
# Coding missing data
# NA = "Not Available"
# Makes certain calculations impossible
x1 <- c(1, 2, 3, NA, 5)
summary(x1)  # Works with NA
mean(x1)  # Doesn't work
# To find missing values
which(is.na(x1))  # Give index number
# Ignore missing values with na.rm = T
mean(x1, na.rm = T)
mean(x1, na.rm = T)
x2 <- x1
x2[is.na(x2)] <- 0
x2
x3 <- ifelse(is.na(x1), 0, x1)
x3
# Square data
x2 <- x^2
hist(x2)
boxplot(x2)
# 4th power
x4 <- x^4
hist(x4)
boxplot(x4)
rm(list = ls())  # Clean up
#################################
#################################
#################################
# R Statistics Essential Training
# Ex05_01
# Selecting cases
# Load data
?mtcars
data(mtcars)
mtcars
mean(mtcars$qsec)
mean(mtcars$qsec[mtcars$cyl == 8])
median(mtcars$hp)
mean(mtcars$mpg[mtcars$hp > median(mtcars$hp)])
cyl.8 <- mtcars[mtcars$cyl == 8, ]
View(cyl.8)
mtcars[mtcars$cyl == 8 & mtcars$carb >= 4, ]
rm(list = ls())  # Clean up
# Load data
?iris
data(iris)
iris
View(iris)
# Load data
?mtcars
data(mtcars)
mtcars
mean(mtcars$qsec)
mean(mtcars$cyl)
library(plyr)
require(plyr)
ddply(yourData, c("block", "date"), summarize, outVal = mean(data))
View(mtcars)
?plyr
ddply(mtcars, "cyl", summarize, outVal = mean(data))
ddply(mtcars, "cyl", summarize, outVal = mean(mtcars))
ddply(mtcars, "cyl", summarize, outVal = mean(mtcars$qsec))
ddply(mtcars, mtcars$qsec, summarize, outVal = mean(mtcars$cyl))
# Load data
?mtcars
data(mtcars)
mtcars
# Mean quarter-mile time (for all cars)
mean(mtcars$qsec)
mean(mtcars$cyl)
mean(mtcars$qsec[mtcars$cyl == 8])
mean(mtcars$qsec[mtcars$cyl())
mean(mtcars$qsec[mtcars$cyl])
mean(mtcars$qsec[mtcars$cyl])
# Load data
?iris
data(iris)
iris
mean(iris$Petal.Width)
View(iris)
aggregate(iris$Petal.Width ~ iris$Species, FUN = mean)
?aggregate
aggregate(iris$Petal.Width, iris$Species, FUN = mean)
by1 <- iris$Species
by1
aggregate(iris$Petal.Width, by1, FUN = mean)
?list
# Split the data file and repeat analyses
# with "aggregate"
# Compare groups on mean of one variable
aggregate(iris$Petal.Width ~ iris$Species, FUN = mean)
# Compare groups on several variables
# Use cbind to list outcome variables
aggregate(cbind(iris$Petal.Width, iris$Petal.Length) ~ iris$Species, FUN = mean)
rm(list = ls())  # Clean up
#################################
#################################
#################################
# R Statistics Essential Training
# Ex05_03
# Merging files
# Load data
?longley
data(longley)
View(longley)
# Split up longley
a1 <- longley[1:14, 1:6]  # Starting data
a2 <- longley[1:14, 6:7]  # New column to add (with "Year" to match)
View(a1)
View(a2)
b <- longley[15:16, ]     # New rows to add
write.table(a2, "~/Desktop/R/longley.a2.txt", sep="\t")
View(b)
write.table(a1, "~/Desktop/R/longley.a1.txt", sep="\t")
write.table(a2, "~/Desktop/R/longley.a2.txt", sep="\t")
write.table(b, "~/Desktop/R/longley.b.txt", sep="\t")
rm(list=ls()) # Clear out everything to start fresh
# Import data
a1t <- read.table("~/Desktop/R/longley.a1.txt", sep="\t")
a2t <- read.table("~/Desktop/R/longley.a2.txt", sep="\t")
View(a1t)
View(a2t)
a.1.2 <- merge(a1t, a2t, by = "Year")  # Merge two data frames
View(a.1.2)
a.1.2  # Check results
b <- read.table("~/Desktop/R/longley.b.txt", sep="\t")
all.data <- rbind(a.1.2, b)  # "Row Bind"
View(all.data)
all.data  # Check data
row.names(all.data) <- NULL  # Reset row names
View(all.data)
# Load data
?ToothGrowth
aggregate(ToothGrowth$len ~ ToothGrowth$supp, FUN = mean)
aggregate(ToothGrowth$len ~ ToothGrowth$supp, FUN = median)
# Load WDI and tidyr package
library(WDI)
library(tidyr)
# Gather fertilizer consumption data from WDI
FertConsumpData <- WDI(indicator = "AG.CON.FERT.ZS")
install.packages("WDI")
install.packages("tidyr")
# Load WDI and tidyr package
library(WDI)
library(tidyr)
FertConsumpData <- WDI(indicator = "AG.CON.FERT.ZS")
View(FertConsumpData)
####Cargar los paquetes que necesitamos para limpiar los datos
library(WDI)
library(countrycode)
library(xlsx)
library(repmis)
library(tidyr)
library(WDI)
library(XML)
library(plyr)
install.packages("XML")
install.packages("plyr")
possible_dir <- c('/Users/alvarolopezguiresse/GoogleDrive/[] ADMINISTRACION PUBLICA/THESIS/Thesis', '/Users/mariorodriguez/Desktop/Thesis')
repmis::set_valid_wd(possible_dir)
possible_dir <- c('/Users/alvarolopezguiresse/GoogleDrive/[] ADMINISTRACION PUBLICA/THESIS/Thesis', '/Users/mariorodriguez/Desktop/Thesis')
repmis::set_valid_wd(possible_dir)
possible_dir <- c('/Users/alvarolopezguiresse/GoogleDrive/[] ADMINISTRACION PUBLICA/tesis/Thesis', '/Users/mariorodriguez/Desktop/Thesis')
repmis::set_valid_wd(possible_dir)
install.packages("plm")
FOTP <- read.xlsx("FOTPScores.xlsx", 1)
FOTP <- FOTP[, 1:21]
names(FOTP)[2:21] <- c(1996:2015)
FOTP<- gather(FOTP, "year", "FOTP", 2:21)
names(FOTP)[1] <- c("country")
FOTP$iso3c <- countrycode(FOTP$country, 'country.name', 'iso3c', warn = TRUE)
FOTP <- FOTP[, 2:4]
library(WDI)
library(countrycode)
library(xlsx)
library(repmis)
library(tidyr)
library(WDI)
library(XML)
library(plyr)
library(plm)
possible_dir <- c('/Users/alvarolopezguiresse/GoogleDrive/[] ADMINISTRACION PUBLICA/tesis/Thesis', '/Users/mariorodriguez/Desktop/Thesis')
repmis::set_valid_wd(possible_dir)
IDEA <- read.csv("AnalisisR.csv")
IDEA$ccodealp <- countrycode(IDEA$Country, 'country.name', 'iso3c', warn = FALSE)
IDEA <- IDEA[, -2]
View(IDEA)
Merged <- merge(IDEA, QoGts, by = c('ccodealp', 'year'))
IDEA <- read.csv("AnalisisR.csv")
ncol(IDEA)
IDEA <- IDEA[, -(39:41)]
colnames(IDEA)[1] <- "country"
library(WDI)
library(countrycode)
library(xlsx)
library(repmis)
library(tidyr)
library(WDI)
library(XML)
library(plyr)
library(plm)
possible_dir <- c('/Users/alvarolopezguiresse/GoogleDrive/[] ADMINISTRACION PUBLICA/tesis/Thesis', '/Users/mariorodriguez/Desktop/Thesis')
repmis::set_valid_wd(possible_dir)
##############Analisis de R
####Abrimos ??ltima versi??n de la base de IDEA y le agregamos el iso3c
IDEA <- read.csv("AnalisisR.csv")
ncol(IDEA)
IDEA <- IDEA[, -(39:41)]
colnames(IDEA)[1] <- "country"
IDEA$iso3c <- countrycode(IDEA$country, 'country.name', 'iso3c', warn = TRUE)
WEFJI <- read.xlsx("WEFJudInd.xlsx", 1)
#####Limpiar la del base del WEF y agregamos el iso3c
WEFJIclean <- gather(WEFJI, country, wefji, Albania:Zimbabwe)
WEFJIclean$iso3c <- countrycode(WEFJIclean$country, 'country.name', 'iso3c', warn = TRUE)
WEFJI <- write.csv(WEFJIclean, "WEFJudicialIndependence.csv")
WEFJI <- read.csv("WEFJudicialIndependence.csv")
WEFJI <- WEFJI[,-(1)]
WEFJI <- WEFJI[,-(2)]
View(WEFJI)
WorldBank <- WDI(country = 'all', start = '1996', end = '2015', indicator = c('SI.POV.GINI', 'SP.DYN.LE00.IN', 'NY.GDP.MKTP.CD', 'ny.gdp.totl.rt.zs', 'SP.RUR.TOTL.ZS', 'SE.TER.ENRR'), extra =TRUE)
WorldBank <- WDI(country = 'all', start = '1996', end = '2015', indicator = c('SI.POV.GINI', 'SP.DYN.LE00.IN', 'NY.GDP.MKTP.CD', 'ny.gdp.totl.rt.zs', 'SP.RUR.TOTL.ZS', 'SE.TER.ENRR'), extra =TRUE)
WorldBank <- WorldBank[-(1:100), ]
WorldBank <- WorldBank[, (3:10)]
sapply(WorldBank, class)
colnames(WorldBank)[2] <- "gini"
colnames(WorldBank)[3] <- "lifeexpectancy"
colnames(WorldBank)[4] <- "GDP"
colnames(WorldBank)[5] <- "natres"
colnames(WorldBank)[6] <- "ruralpop"
colnames(WorldBank)[7] <- "tertiaryschool"
View(WorldBank)
CepalGastos <- read.csv("CepalGastos.csv")
colnames(CepalGastos)[8] <- "1996"
colnames(CepalGastos)[9] <- "1997"
colnames(CepalGastos)[10] <- "1998"
colnames(CepalGastos)[11] <- "1999"
colnames(CepalGastos)[12] <- "2000"
colnames(CepalGastos)[13] <- "2001"
colnames(CepalGastos)[14] <- "2002"
colnames(CepalGastos)[15] <- "2003"
colnames(CepalGastos)[16] <- "2004"
colnames(CepalGastos)[17] <- "2005"
colnames(CepalGastos)[18] <- "2006"
colnames(CepalGastos)[19] <- "2007"
colnames(CepalGastos)[20] <- "2008"
colnames(CepalGastos)[21] <- "2009"
colnames(CepalGastos)[22] <- "2010"
colnames(CepalGastos)[23] <- "2011"
colnames(CepalGastos)[24] <- "2012"
colnames(CepalGastos)[25] <- "2013"
colnames(CepalGastos)[26] <- "2014"
colnames(CepalGastos)[27] <- "2015"
CepalGastos <- CepalGastos[,-(2:7)]
View(CepalGastos)
CepalGastos <- gather(CepalGastos, country, CepalGastos)
colnames(CepalGastos)[2] <- "year"
View(CepalGastos)
CepalGastos$iso3c <- countrycode(CepalGastos$country, 'country.name', 'iso3c', warn = TRUE)
CepalGastos <- CepalGastos[,-(1)]
View(CepalGastos)
CepalGastos <- read.csv("CepalGastos.csv")
colnames(CepalGastos)[8] <- "1996"
colnames(CepalGastos)[9] <- "1997"
colnames(CepalGastos)[10] <- "1998"
colnames(CepalGastos)[11] <- "1999"
colnames(CepalGastos)[12] <- "2000"
colnames(CepalGastos)[13] <- "2001"
colnames(CepalGastos)[14] <- "2002"
colnames(CepalGastos)[15] <- "2003"
colnames(CepalGastos)[16] <- "2004"
colnames(CepalGastos)[17] <- "2005"
colnames(CepalGastos)[18] <- "2006"
colnames(CepalGastos)[19] <- "2007"
colnames(CepalGastos)[20] <- "2008"
colnames(CepalGastos)[21] <- "2009"
colnames(CepalGastos)[22] <- "2010"
colnames(CepalGastos)[23] <- "2011"
colnames(CepalGastos)[24] <- "2012"
colnames(CepalGastos)[25] <- "2013"
colnames(CepalGastos)[26] <- "2014"
colnames(CepalGastos)[27] <- "2015"
View(CepalGastos)
CepalGastos <- CepalGastos[,-(2:7)]
CepalGastos <- gather(CepalGastos, country, CepalGastos)
colnames(CepalGastos)[2] <- "year"
CepalGastos$iso3c <- countrycode(CepalGastos$country, 'country.name', 'iso3c', warn = TRUE)
CepalGastos$iso3c[, CepalGastos$country=="REP. DOMINICANA"] <- "DOM"
CepalGastos$iso3c[CepalGastos$country=="REP. DOMINICANA"] <- "DOM"
CepalGastos <- CepalGastos[,-(1)]
QoGts <- read.csv('qog_std_ts.csv')
QoGts<-QoGts[!(QoGts$year==1946),]
QoGts<-QoGts[!(QoGts$year==1947),]
QoGts<-QoGts[!(QoGts$year==1948),]
QoGts<-QoGts[!(QoGts$year==1949),]
QoGts<-QoGts[!(QoGts$year==1950),]
QoGts<-QoGts[!(QoGts$year==1951),]
QoGts<-QoGts[!(QoGts$year==1952),]
QoGts<-QoGts[!(QoGts$year==1953),]
QoGts<-QoGts[!(QoGts$year==1954),]
QoGts<-QoGts[!(QoGts$year==1955),]
QoGts<-QoGts[!(QoGts$year==1956),]
QoGts<-QoGts[!(QoGts$year==1957),]
QoGts<-QoGts[!(QoGts$year==1958),]
QoGts<-QoGts[!(QoGts$year==1959),]
QoGts<-QoGts[!(QoGts$year==1960),]
QoGts<-QoGts[!(QoGts$year==1961),]
QoGts<-QoGts[!(QoGts$year==1962),]
QoGts<-QoGts[!(QoGts$year==1963),]
QoGts<-QoGts[!(QoGts$year==1964),]
QoGts<-QoGts[!(QoGts$year==1965),]
QoGts<-QoGts[!(QoGts$year==1966),]
QoGts<-QoGts[!(QoGts$year==1967),]
QoGts<-QoGts[!(QoGts$year==1968),]
QoGts<-QoGts[!(QoGts$year==1969),]
QoGts<-QoGts[!(QoGts$year==1970),]
QoGts<-QoGts[!(QoGts$year==1971),]
QoGts<-QoGts[!(QoGts$year==1972),]
QoGts<-QoGts[!(QoGts$year==1973),]
QoGts<-QoGts[!(QoGts$year==1974),]
QoGts<-QoGts[!(QoGts$year==1975),]
QoGts<-QoGts[!(QoGts$year==1976),]
QoGts<-QoGts[!(QoGts$year==1977),]
QoGts<-QoGts[!(QoGts$year==1978),]
QoGts<-QoGts[!(QoGts$year==1979),]
QoGts<-QoGts[!(QoGts$year==1980),]
QoGts<-QoGts[!(QoGts$year==1981),]
QoGts<-QoGts[!(QoGts$year==1982),]
QoGts<-QoGts[!(QoGts$year==1983),]
QoGts<-QoGts[!(QoGts$year==1984),]
QoGts<-QoGts[!(QoGts$year==1985),]
QoGts<-QoGts[!(QoGts$year==1986),]
QoGts<-QoGts[!(QoGts$year==1987),]
QoGts<-QoGts[!(QoGts$year==1988),]
QoGts<-QoGts[!(QoGts$year==1989),]
QoGts<-QoGts[!(QoGts$year==1990),]
QoGts<-QoGts[!(QoGts$year==1991),]
QoGts<-QoGts[!(QoGts$year==1992),]
QoGts<-QoGts[!(QoGts$year==1993),]
QoGts<-QoGts[!(QoGts$year==1994),]
QoGts<-QoGts[!(QoGts$year==2016),]
QoGts <- QoGts[, c( "cname", 'year', "fh_status","fh_fotpc", "dr_sg",
"dr_eg", "hf_trade", "sgi_ecgf", "fi_index", "fi_index_cl",
"hf_business", "hf_efiscore", "hf_financ", "hf_fiscal")]
QoGts$iso3c <- countrycode(QoGts$cname, 'country.name', 'iso3c', warn = TRUE)
View(QoGts)
QoGts <- QoGts[!QoGts$cname %in% c("Germany, East", "Germany, West", "Korea, North", "Micronesia", "Serbia and Montenegro")]
QoGts <- QoGts[,!QoGts$cname %in% c("Germany, East", "Germany, West", "Korea, North", "Micronesia", "Serbia and Montenegro")]
QoGts <- QoGts[!QoGts$cname %in% c("Germany, East", "Germany, West", "Korea, North", "Micronesia", "Serbia and Montenegro"),]
FOTP <- read.xlsx("FOTPScores.xlsx", 1)
View(FOTP)
FOTP <- FOTP[, 1:21]
names(FOTP)[2:21] <- c(1996:2015)
FOTP<- gather(FOTP, "year", "FOTP", 2:21)
names(FOTP)[1] <- c("country")
FOTP$iso3c <- countrycode(FOTP$country, 'country.name', 'iso3c', warn = TRUE)
FOTP <- FOTP[!FOTP$country %in% c("Crimea","Germany, East", "Germany, West",
"Israeli-Occupied Territories and Palestinian Authority",
"Micronesia","Kosovo", "Serbia and Montenegro", "Transkei", "Yemen, North"),]
View(IDEA)
View(IDEA)
View(WorldBank)
WorldBank <- WDI(country = 'all', start = '1996', end = '2015', indicator = c('SI.POV.GINI', 'SP.DYN.LE00.IN', 'NY.GDP.MKTP.CD', 'ny.gdp.totl.rt.zs', 'SP.RUR.TOTL.ZS', 'SE.TER.ENRR'), extra =TRUE)
WorldBank <- WorldBank[-(1:100), ]
View(WorldBank)
WorldBank <- WorldBank[!is.na(WorldBank$iso3c),]
View(WorldBank)
colnames(WorldBank)[4] <- "gini"
colnames(WorldBank)[5] <- "lifeexpectancy"
colnames(WorldBank)[6] <- "GDP"
colnames(WorldBank)[7] <- "natres"
colnames(WorldBank)[8] <- "ruralpop"
colnames(WorldBank)[9] <- "tertiaryschool"
colnames(CepalGastos)[1] <- "country.cepal"
View(CepalGastos)
CepalGastos <- read.csv("CepalGastos.csv")
View(CepalGastos)
colnames(CepalGastos)[8] <- "1996"
colnames(CepalGastos)[9] <- "1997"
colnames(CepalGastos)[10] <- "1998"
colnames(CepalGastos)[11] <- "1999"
colnames(CepalGastos)[12] <- "2000"
colnames(CepalGastos)[13] <- "2001"
colnames(CepalGastos)[14] <- "2002"
colnames(CepalGastos)[15] <- "2003"
colnames(CepalGastos)[16] <- "2004"
colnames(CepalGastos)[17] <- "2005"
colnames(CepalGastos)[18] <- "2006"
colnames(CepalGastos)[19] <- "2007"
colnames(CepalGastos)[20] <- "2008"
colnames(CepalGastos)[21] <- "2009"
colnames(CepalGastos)[22] <- "2010"
colnames(CepalGastos)[23] <- "2011"
colnames(CepalGastos)[24] <- "2012"
colnames(CepalGastos)[25] <- "2013"
colnames(CepalGastos)[26] <- "2014"
colnames(CepalGastos)[27] <- "2015"
CepalGastos <- CepalGastos[,-(2:7)]
CepalGastos <- gather(CepalGastos, country, CepalGastos)
colnames(CepalGastos)[2] <- "year"
colnames(CepalGastos)[1] <- "country.cepal"
CepalGastos$iso3c <- countrycode(CepalGastos$country, 'country.name', 'iso3c', warn = TRUE)
CepalGastos$iso3c[CepalGastos$country=="REP. DOMINICANA"] <- "DOM"
View(WorldBank)
colnames(WorldBank)[2] <- "country.wb"
View(QoGts)
View(FOTP)
View(FOTP)
names(FOTP)[1] <- c("country.fotp")
View(IDEA)
names(IDEA)[1] <- c("country.IDEA")
View(WorldBank)
AnalisisRCompleta <- merge(IDEA, WorldBank, by = c('iso3c', 'year'))
View(AnalisisRCompleta)
AnalisisRCompleta <- merge(AnalisisRCompleta, FOTP, by = c('iso3c', 'year'))
AnalisisRCompleta <- merge(AnalisisRCompleta, QoGts, by = c('iso3c', 'year'))
write.csv(AnalisisRCompleta, file = "AnalisisRCompleta.csv")
AnalisisRCompletaWEF <- merge(AnalisisRCompleta, WEFJI, by = c('iso3c', 'year'))
write.csv(AnalisisRCompletaWEF, file = "AnalisisRCompletaWEF.csv")
AnalisisAL <- merge(AnalisisRCompletaWEF, CepalGastos, by = c('iso3c', 'year'))
write.csv(AnalisisAL, file = "AnalisisAL.csv")
View(AnalisisAL)
