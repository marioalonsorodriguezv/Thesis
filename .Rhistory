e <- read.csv('kerg.csv', skip = 3, header = T, sep = ';',
fileEncoding = 'latin1', encoding = 'UTF-8',
stringsAsFactors = F)
names(e)
old <- c(1:4, 8, 20, 22, 24, 26, 28, 30, 32, 34, 36, 38, 40, 42, 44, 46, 104, 106)
new <- c('no', 'district', 'landid', 'eligible', 'voters', 'cdu1', 'cdu2',
'spd1', 'spd2', 'fdp1', 'fdp2', 'dielink1', 'dielinke2',
'greens1', 'greens2', 'csu1', 'csu2', 'pirates1', 'pirates2',
'afd1', 'afd2')
names(e)[old] <- new
names(e)
names(e)[new]
names(e)
e <- e[, old]
view(e)
View(e)
e <- e[1,]
e <- read.csv('elec_data.csv', skip = 3, header = T, sep = ';',
fileEncoding = 'latin1', encoding = 'UTF-8',
stringsAsFactors = F)
e <- read.csv('elec_data.csv', skip = 3, header = T, sep = ';',
fileEncoding = 'latin1', encoding = 'UTF-8',
stringsAsFactors = F)
e <- read.csv('kerg.csv', skip = 3, header = T, sep = ';',
fileEncoding = 'latin1', encoding = 'UTF-8',
stringsAsFactors = F)
old <- c(1:4, 8, 20, 22, 24, 26, 28, 30, 32, 34, 36, 38, 40, 42, 44, 46, 104, 106)
new <- c('no', 'district', 'landid', 'eligible', 'voters', 'cdu1', 'cdu2',
'spd1', 'spd2', 'fdp1', 'fdp2', 'dielink1', 'dielinke2',
'greens1', 'greens2', 'csu1', 'csu2', 'pirates1', 'pirates2',
'afd1', 'afd2')
names(e)[old] <- new
e <- e[-1,]
e <- e[, old]
e <- e %>% filter(landid != 99 & !is.na(landid))
e <- e %>% filter(landid != 99 & !is.na(landid))
library(magrittr)  # for 'piping': more readable code
library(dplyr)  # for using filter()
library(stringr)  # for editing strings
library(stargazer)
e <- e %>% filter(landid != 99 & !is.na(landid))
e[, 4:ncol(e)] <- e[, 4:ncol(e)] %>% apply(2, as.numeric)
summary(lm1)
library(foreign)  # for using read.dta() to open the .dta-file
library(stargazer)  # for summary statistics and regression tables
library(magrittr)  # for 'piping': more readable code
library(ggplot2)  # the ggplot2 package provides nice functions for plotting
d <- read.dta("/Users/mariorodriguez/Downloads/EUSDK.dta", convert.factors = FALSE)
library(plyr)
d$wealth <- mapvalues(d$wealth, from = c("4", "3", "2", "1"), to = c("1", "2", "3", "4"))
d <- transform(d, wealth=as.numeric(as.character(wealth)))
m1 <- lm(eusupp ~ sex + wealth + age, d)
summary(lm1)
summary(m1)
m2 <- lm(eusupp ~ sex + wealth + educ + age, d)
summary(m2)
m3 <- lm(eusupp ~ sex + left_right + wealth + educ + age, d)
summary(m3)
m7 <- lm(eusupp ~ sex + left_right + wealth + educ + age + I(eusupp^2) + I(eusupp^3), d))
m7 <- lm(eusupp ~ sex + left_right + wealth + educ + age + I(eusupp^2) + I(eusupp^3), d))
m3 <- lm(eusupp ~ sex + left_right + wealth + educ + age, d)
m7 <- lm(eusupp ~ sex + left_right + wealth + educ + age + I(eusupp^2) + I(eusupp^3), d))
m7 <- lm(eusupp ~ sex + left_right + wealth + educ + age + I(left_right^2), d)
summary(m7)
m8 <- lm(eusupp ~ sex + left_right + wealth + educ + age + I(eusupp^2) + I(eusupp^3), d)
summary(m8)
stargazer (m2, float = F, header = F, dep.var.caption = 'EU Support', covariate.labels = c('Wealth', 'Education', NA))
library(stargazer)
stargazer (m2, float = F, header = F, dep.var.caption = 'EU Support', covariate.labels = c('Wealth', 'Education', NA))
summary(m2)
2 + 2
2 + 2
number <- 10
number
words <- "Hello World"
words
divided <- 2 / 3
divided
abscent <- NA
is.na(abscent)
class(number)
class(abscent)
class(words)
numeric_vector <- c(1, 2, 3)
combined <- cbind(numeric_vector, character_vector)
character_vector <- c("Albania", "Botswana", "Cambodia")
combined <- cbind(numeric_vector, character_vector)
combined
new_df z- data.frame(numeric_vector, character_vector)
new_df <- data.frame(numeric_vector, character_vector)
view(new_df)
View(new_df)
new_df$character_vector
install.packages(c("foreign", "lattice", "Matrix", "mgcv", "survival"))
install.packages("dplyr")
data(swiss)
names(swiss)
head(swiss[1:3, 1:4])
numbers <- c(1, 2, 1)
names <- c('Mario', 'Alonso')
factors <- factor(numbers, labels = names)
summary(factors)
numbers <- c(1, 2, 1)
names <- c('dogs', 'cats')
factors <- factor(numbers, labels = names)
summary(factors)
numbers <- c(1, 2, 2)
names <- c('dogs', 'cats', 'birds')
factors <- factor(numbers, labels = names)
summary(factors)
numbers <- c(1, 2, 3)
names <- c('dogs', 'cats', 'birds')
factors <- factor(numbers, labels = names)
summary(factors)
combined_df <- data.frame(numbers, names, stringAsFactors = False)
combined_df <- data.frame(numbers, names, stringAsFactors = F)
combined_df
combined_df <- data.frame(numbers, names, stringsAsFactors = F)
combined_df
factor_names <- c('loyal', 'funny', 'fly')
factors <- factor(numbers, labels = factor_names)
summary(factors)
combined_df <- data.frame(numbers, names, factors, stringsAsFactors = F)
combined_df
logics <- c('TRUE', 'FALSE', 'FALSE')
combined_df <- data.frame(numbers, names, factors, logics, stringsAsFactors = F)
combined_df
library(datasets)
View(Titanic)
View(LakeHuron)
summary(AirPassengers)
View(AirPassengers)
View(discoveries)
View(HairEyeColor)
View(UCBAdmissions)
###Create a number variable
numbers <- c(1, 2, 3)
###Create a character variable
names <- c('dogs', 'cats', 'birds')
###Create a factor variable
factor_names <- c('loyal', 'funny', 'fly')
factors <- factor(numbers, labels = factor_names)
summary(factors)
###Create a logical variable
logics <- c(TRUE, FALSE, FALSE)
###Merge all the vectors into one dataset
combined_df <- data.frame(numbers, names, factors, logics, stringsAsFactors = F)
combined_df
View(d)
###Create a number variable
numbers <- c(1, 2, 3)
###Create a character variable
names <- c('dogs', 'cats', 'birds')
###Create a factor variable
factor_names <- c('loyal', 'funny', 'flying')
factors <- factor(numbers, labels = factor_names)
summary(factors)
###Create a logical variable
logics <- c(TRUE, FALSE, FALSE)
###Merge all the vectors into one dataset
combined_df <- data.frame(numbers, names, factors, logics, stringsAsFactors = F)
combined_df
View(USArrests)
library(ROAuth)
library(twitteR)
library(streamR)
library(stringr)
library(RCurl)
library(maps)
library(devtools)
library(tm)
library(Rfacebook)
library(base64enc)
library(ROAuth)
library(SnowballC)
library(igraph)
requestURL <- "https://api.twitter.com/oauth/request_token"
accessURL <- "https://api.twitter.com/oauth/access_token"
authURL <- "https://api.twitter.com/oauth/authorize"
consumerKey <- "1YbhyroEaYAuzPoKey7iCLBBL"
consumerSecret <- "EBc0proP8Jh1aRxIES9QyGwS2CIMAu5Jc3zrDLQDKIz5y3DM5B"
my_oauth <- OAuthFactory$new(consumerKey=consumerKey,
consumerSecret=consumerSecret, requestURL=requestURL,
accessURL=accessURL, authURL=authURL)
my_oauth$handshake(cainfo = system.file("CurlSSL", "cacert.pem", package = "RCurl"))
accessToken = '735118568120025088-E1MS3g3tyWG6Qba4ltcZ94mJZFQXwoz'
accessSecret = 'BcB6QTmtkIrQhoPhWBjWeLmpxt1KTV5gKfX4c1AumxZS4'
library(twitteR)
setup_twitter_oauth(consumer_key=consumerKey, consumer_secret=consumerSecret,
access_token=accessToken, access_secret=accessSecret)
requestURL <- "https://api.twitter.com/oauth/request_token"
accessURL <- "https://api.twitter.com/oauth/access_token"
authURL <- "https://api.twitter.com/oauth/authorize"
consumerKey <- "1YbhyroEaYAuzPoKey7iCLBBL"
consumerSecret <- "EBc0proP8Jh1aRxIES9QyGwS2CIMAu5Jc3zrDLQDKIz5y3DM5B"
my_oauth <- OAuthFactory$new(consumerKey=consumerKey,
consumerSecret=consumerSecret, requestURL=requestURL,
accessURL=accessURL, authURL=authURL)
my_oauth$handshake(cainfo = system.file("CurlSSL", "cacert.pem", package = "RCurl"))
accessToken = '735118568120025088-E1MS3g3tyWG6Qba4ltcZ94mJZFQXwoz'
accessSecret = 'BcB6QTmtkIrQhoPhWBjWeLmpxt1KTV5gKfX4c1AumxZS4'
library(twitteR)
setup_twitter_oauth(consumer_key=consumerKey, consumer_secret=consumerSecret,
access_token=accessToken, access_secret=accessSecret)
library(streamR)
filterStream(file.name = 'brexitNov.json', track = 'brexit',
timeout = 400, oauth = my_oauth)
brexitTweets2 <- parseTweets('brexitNov.json')
table(brexitTweets2$lang)
languageTable <- table(brexitTweets2$lang)
languageDF <- as.data.frame(languageTable, stringAsFactors = F)
View(languageDF)
View(languageDF)
order(languageDF$Freq, decreasing = T)
View(languageDF)
View(languageDF)
order(languageDF$Freq, decreasing = T)
order(languageDF$Freq, decreasing = T)
languageDF <- languageDF[order(languageDF$Freq, decreasing = T), ]
languageDF
language_top_df <. languageDF[1:10,]
language_top_df <- languageDF[1:10,]
language_top_df <- languageDF[1:10,]
language_top_df
library(ggplot2)
ggplot() + geom_bar(data=language_top_df , aes(x = reorder(Var1, Freq), y= Freq), stat="identity") +
theme_bw()+xlab(NULL) +
theme(axis.text.x=element_text(angle=90,size=14))
table(brexitTweets2$source)
sum(!is.na(brexitTweets2$lat))
table(brexitTweets2$country)
summary(brexitTweets2$retweet_count)
brexitTweets2$text[which.max(brexitTweets2$retweet_count)]
lenght(unique(brexitTweets2$screen_name))
length(unique(brexitTweets2$screen_name))
unique(brexitTweets2$screen_name)
uniqueUsers <- unique(brexitTweets2$screen_name)
write.csv(uniqueUsers, file = 'uniqueUsersbrexit.csv')
uniqueUsers
uniqueUsers <- as.data.frame(uniqueUsers, stringAsFactors = F)
uniqueUsers
uniqueUsersbrexit.csv
uniqueUsers <- unique(brexitTweets2$screen_name)
uniqueUsers
uniqueUsers <- as.data.frame(languageTable, stringAsFactors = F)
uniqueUsers
uniqueUsers <- as.data.frame(uniqueUsers, stringAsFactors = F)
uniqueUsers
uniqueUsers <- unique(brexitTweets2$screen_name)
uniqueUsers <- as.data.frame(uniqueUsers, stringAsFactors = F)
uniqueUsers
order(uniqueUsers$Freq, decreasing = T)
order(uniqueUsers$Freq, decreasing = T)
write.csv(uniqueUsers, file = 'uniqueUsersbrexit.csv')
uniqueUsers <- as.data.frame(uniqueUsers, stringAsFactors = F)
uniqueUsers
table(brexitTweets2$unique_users)
brexitTweets2
View(brexitTweets2)
table(brexitTweets2$screen_name)
userTable <- table(brexitTweets2$screen_name)
table(brexitTweets2$screen_name)
userTable <- table(brexitTweets2$screen_name)
userDF <- as.data.frame(userTable, stringAsFactors = F)
order(userDF$Freq, decreasing = T)
userDF <- userDF[order(languageDF$Freq, decreasing = T), ]
table(brexitTweets2$screen_name)
userTable <- table(brexitTweets2$screen_name)
userDF <- as.data.frame(userTable, stringAsFactors = F)
order(userDF$Freq, decreasing = T)
userDF <- userDF[order(userDF$Freq, decreasing = T), ]
userDF
userDF
userDF
user_top_df <- userDF[1:20,]
user_top_df
ggplot() + geom_bar(data=language_top_df , aes(x = reorder(Var1, Freq), y= Freq), stat="identity") +
theme_bw()+xlab(NULL) +
theme(axis.text.x=element_text(angle=90,size=14))
ggplot() + geom_bar(data=user_top_df, aes(x = reorder(Var1, Freq), y= Freq), stat="identity") +
theme_bw()+xlab(NULL) +
theme(axis.text.x=element_text(angle=90,size=14))
GINI <- WDI(country = 'all', start = '2010', end = '2010', indicator = c('SI.POV.GINI', 'NY.GDP.PCAP.CD'), extra = TRUE)
library(WDI)
library(countrycode)
library(rio)
library(stargazer)
library(ggplot2)
GINI <- WDI(country = 'all', start = '2010', end = '2010', indicator = c('SI.POV.GINI', 'NY.GDP.PCAP.CD'), extra = TRUE)
View(GINI)
GINI <- WDI(country = 'all', start = '2010', end = '2010', indicator = c('SI.POV.GINI', 'NY.GDP.PCAP.CD'), extra = TRUE)
View(GINI)
library(WDI)
library(countrycode)
library(rio)
library(stargazer)
library(ggplot2)
GINI <- WDI(country = 'all', start = '2010', end = '2010', indicator = c('SI.POV.GINI', 'NY.GDP.PCAP.CD'), extra = TRUE)
CO2 <- import('http://edgar.jrc.ec.europa.eu/news_docs/CO2_per_capita_1970-2014_dataset_of_CO2_report_2015.xls')
CO2 <- CO2[-c(1:13), ]
names(CO2)[42] <- "CO2010"
names(CO2)[names(CO2)=="Global per capita CO2 emissions from fossil fuel use and cement production 1970-2014"] <- "country"
CO2$iso2c <- countrycode(CO2$country, 'country.name', 'iso2c', warn = TRUE)
CO2 <- CO2[, c('iso2c', 'CO2010')]
View(GINI)
names(GINI)[names(GINI)=="SI.POV.GINI"] <- "GiniCoeff"
names(GINI)[names(GINI)=="NY.GDP.PCAP.CD"] <- "GDPperCapita"
GINI$iso2c <- as.character(GINI$iso2c)
GINI <- GINI[, c('iso2c', 'country', 'GiniCoeff', 'GDPperCapita', 'Income')]
GINI <- GINI[, c('iso2c', 'country', 'GiniCoeff', 'GDPperCapita', 'income')]
Combined <- merge(GINI, CO2, by = c('iso2c'))
View(Combined)
Combined <- Combined[complete.cases(Combined),]
stargazer(Combined, type = 'text')
ggplot(data = Combined, aes(x = CO2010,
y = GiniCoeff)) + geom_point(aes(colour = income)) + theme_bw()
m1 <- lm(CO2010 ~ GiniCoeff, Combined)
m2 <- lm(CO2010 ~ GiniCoeff + GDPperCapita, Combined)
stargazer(m1, m2, type = 'text')
library(ROAuth)
library(twitteR)
library(streamR)
library(stringr)
library(RCurl)
library(maps)
library(devtools)
library(ggplot2)
library(tm)
library(SnowballC)
library(igraph)
library(Rfacebook)
requestURL <- "https://api.twitter.com/oauth/request_token"
accessURL <- "https://api.twitter.com/oauth/access_token"
authURL <- "https://api.twitter.com/oauth/authorize"
consumerKey <- "1YbhyroEaYAuzPoKey7iCLBBL"
consumerSecret <- "EBc0proP8Jh1aRxIES9QyGwS2CIMAu5Jc3zrDLQDKIz5y3DM5B"
my_oauth <- OAuthFactory$new(consumerKey=consumerKey,
consumerSecret=consumerSecret, requestURL=requestURL,
accessURL=accessURL, authURL=authURL)
my_oauth$handshake(cainfo = system.file("CurlSSL", "cacert.pem", package = "RCurl"))
accessToken = '735118568120025088-E1MS3g3tyWG6Qba4ltcZ94mJZFQXwoz'
accessSecret = 'BcB6QTmtkIrQhoPhWBjWeLmpxt1KTV5gKfX4c1AumxZS4'
library(twitteR)
setup_twitter_oauth(consumer_key=consumerKey, consumer_secret=consumerSecret,
access_token=accessToken, access_secret=accessSecret)
FamilyTweets <- searchTwitter('todossomosfamilia', n=300)
FamilyTweets <- twListToDF(FamilyTweets)
write.csv(FamilyTweets, "FamilyTweetsDEMO.csv")
FamilyTweets$created
filterStream(file.name="familia.json", track="todossomosfamilia",
timeout=100, oauth=my_oauth)
View(FamilyTweets)
FamilyTweets2 <- parseTweets("familia.json")
filterStream(file.name="familia.json", track="todossomosfamilia",
timeout=300, oauth=my_oauth)
FamilyTweets <- searchTwitter('todossomosfamilia', n=3000)
filterStream(file.name='familia2.json', track = 'todossomosfamilia', 'defendemoslafamilia'
timeout = 0, oauth=my_oauth)
filterStream(file.name='familia2.json', track = c('todossomosfamilia', 'defendemoslafamilia'),
timeout=36000, oauth=my_oauth)
FamilyTweets10hrs <- parseTweets("familia2.json")
FamilyTweets10hrs
View(FamilyTweets10hrs)
FamilyTweets30k <- searchTwitter(c=('todossomosfamilia', 'defendemoslafamilia',) n=30000)
FamilyTweets30k <- searchTwitter(c=('todossomosfamilia', 'defendemoslafamilia',) n=30000)
FamilyTweets30k <- searchTwitter(c=('todossomosfamilia' 'defendemoslafamilia') n=30000)
FamilyTweets30k <- searchTwitter(c=('todossomosfamilia', 'defendemoslafamilia'), n=30000)
FamilyTweets30k <- searchTwitter(c=('todossomosfamilia', 'defendemoslafamilia',), n=30000)
FamilyTweets30k <- searchTwitter('todossomosfamilia', n=30000)
FamilyTweets30k
AntiFamilyTweets30k <- searchTwitter('defendemoslafamilia', n=30000)
AntiFamilyTweets30k
View(AntiFamilyTweets30k)
AntiFamilyTweets30k <- twListToDF(AntiFamilyTweets30k)
View(AntiFamilyTweets30k)
library(ROAuth)
library(twitteR)
library(streamR)
library(stringr)
library(RCurl)
library(maps)
library(devtools)
library(tm)
library(Rfacebook)
library(base64enc)
library(ROAuth)
library(SnowballC)
library(igraph)
requestURL <- "https://api.twitter.com/oauth/request_token"
accessURL <- "https://api.twitter.com/oauth/access_token"
authURL <- "https://api.twitter.com/oauth/authorize"
consumerKey <- "1YbhyroEaYAuzPoKey7iCLBBL"
consumerSecret <- "EBc0proP8Jh1aRxIES9QyGwS2CIMAu5Jc3zrDLQDKIz5y3DM5B"
my_oauth <- OAuthFactory$new(consumerKey=consumerKey,
consumerSecret=consumerSecret, requestURL=requestURL,
accessURL=accessURL, authURL=authURL)
my_oauth$handshake(cainfo = system.file("CurlSSL", "cacert.pem", package = "RCurl"))
accessToken = '735118568120025088-E1MS3g3tyWG6Qba4ltcZ94mJZFQXwoz'
accessSecret = 'BcB6QTmtkIrQhoPhWBjWeLmpxt1KTV5gKfX4c1AumxZS4'
setup_twitter_oauth(consumer_key=consumerKey, consumer_secret=consumerSecret,
access_token=accessToken, access_secret=accessSecret)
TweetsMinWage <- searchTwitter('#Fightfor15', n=300000)
library(xlsx)
possible_dir <- c('/Users/alvarolopezguiresse/GoogleDrive/[] ADMINISTRACION PUBLICA/THESIS/Thesis', '/Users/mariorodriguez/Desktop/Thesis')
repmis::set_valid_wd(possible_dir)
QoGts <- read.csv('qog_std_ts.csv')
QoGts<-QoGts[!(QoGts$year==1946),]
QoGts<-QoGts[!(QoGts$year==1947),]
QoGts<-QoGts[!(QoGts$year==1948),]
QoGts<-QoGts[!(QoGts$year==1949),]
QoGts<-QoGts[!(QoGts$year==1950),]
QoGts<-QoGts[!(QoGts$year==1951),]
QoGts<-QoGts[!(QoGts$year==1952),]
QoGts<-QoGts[!(QoGts$year==1953),]
QoGts<-QoGts[!(QoGts$year==1954),]
QoGts<-QoGts[!(QoGts$year==1955),]
QoGts<-QoGts[!(QoGts$year==1956),]
QoGts<-QoGts[!(QoGts$year==1957),]
QoGts<-QoGts[!(QoGts$year==1958),]
QoGts<-QoGts[!(QoGts$year==1959),]
QoGts<-QoGts[!(QoGts$year==1960),]
QoGts<-QoGts[!(QoGts$year==1961),]
QoGts<-QoGts[!(QoGts$year==1962),]
QoGts<-QoGts[!(QoGts$year==1963),]
QoGts<-QoGts[!(QoGts$year==1964),]
QoGts<-QoGts[!(QoGts$year==1965),]
QoGts<-QoGts[!(QoGts$year==1966),]
QoGts<-QoGts[!(QoGts$year==1967),]
QoGts<-QoGts[!(QoGts$year==1968),]
QoGts<-QoGts[!(QoGts$year==1969),]
QoGts<-QoGts[!(QoGts$year==1970),]
QoGts<-QoGts[!(QoGts$year==1971),]
QoGts<-QoGts[!(QoGts$year==1972),]
QoGts<-QoGts[!(QoGts$year==1973),]
QoGts<-QoGts[!(QoGts$year==1974),]
QoGts<-QoGts[!(QoGts$year==1975),]
QoGts<-QoGts[!(QoGts$year==1976),]
QoGts<-QoGts[!(QoGts$year==1977),]
QoGts<-QoGts[!(QoGts$year==1978),]
QoGts<-QoGts[!(QoGts$year==1979),]
QoGts<-QoGts[!(QoGts$year==1980),]
QoGts<-QoGts[!(QoGts$year==1981),]
QoGts<-QoGts[!(QoGts$year==1982),]
QoGts<-QoGts[!(QoGts$year==1983),]
QoGts<-QoGts[!(QoGts$year==1984),]
QoGts<-QoGts[!(QoGts$year==1985),]
QoGts<-QoGts[!(QoGts$year==1986),]
QoGts<-QoGts[!(QoGts$year==1987),]
QoGts<-QoGts[!(QoGts$year==1988),]
QoGts<-QoGts[!(QoGts$year==1989),]
QoGts<-QoGts[!(QoGts$year==1990),]
QoGts<-QoGts[!(QoGts$year==1991),]
QoGts<-QoGts[!(QoGts$year==1992),]
QoGts<-QoGts[!(QoGts$year==1993),]
QoGts<-QoGts[!(QoGts$year==1994),]
QoGts<-QoGts[!(QoGts$year==2016),]
IDEA <- read.xlsx("database.xlsx", 1)
library(xlsx)
possible_dir <- c('/Users/alvarolopezguiresse/GoogleDrive/[] ADMINISTRACION PUBLICA/THESIS/Thesis', '/Users/mariorodriguez/Desktop/Thesis')
repmis::set_valid_wd(possible_dir)
QoGts <- read.csv('qog_std_ts.csv')
QoGts<-QoGts[!(QoGts$year==1946),]
QoGts<-QoGts[!(QoGts$year==1947),]
QoGts<-QoGts[!(QoGts$year==1948),]
QoGts<-QoGts[!(QoGts$year==1949),]
QoGts<-QoGts[!(QoGts$year==1950),]
QoGts<-QoGts[!(QoGts$year==1951),]
QoGts<-QoGts[!(QoGts$year==1952),]
QoGts<-QoGts[!(QoGts$year==1953),]
QoGts<-QoGts[!(QoGts$year==1954),]
QoGts<-QoGts[!(QoGts$year==1955),]
QoGts<-QoGts[!(QoGts$year==1956),]
QoGts<-QoGts[!(QoGts$year==1957),]
QoGts<-QoGts[!(QoGts$year==1958),]
QoGts<-QoGts[!(QoGts$year==1959),]
QoGts<-QoGts[!(QoGts$year==1960),]
QoGts<-QoGts[!(QoGts$year==1961),]
QoGts<-QoGts[!(QoGts$year==1962),]
QoGts<-QoGts[!(QoGts$year==1963),]
QoGts<-QoGts[!(QoGts$year==1964),]
QoGts<-QoGts[!(QoGts$year==1965),]
QoGts<-QoGts[!(QoGts$year==1966),]
QoGts<-QoGts[!(QoGts$year==1967),]
QoGts<-QoGts[!(QoGts$year==1968),]
QoGts<-QoGts[!(QoGts$year==1969),]
QoGts<-QoGts[!(QoGts$year==1970),]
QoGts<-QoGts[!(QoGts$year==1971),]
QoGts<-QoGts[!(QoGts$year==1972),]
QoGts<-QoGts[!(QoGts$year==1973),]
QoGts<-QoGts[!(QoGts$year==1974),]
QoGts<-QoGts[!(QoGts$year==1975),]
QoGts<-QoGts[!(QoGts$year==1976),]
QoGts<-QoGts[!(QoGts$year==1977),]
QoGts<-QoGts[!(QoGts$year==1978),]
QoGts<-QoGts[!(QoGts$year==1979),]
QoGts<-QoGts[!(QoGts$year==1980),]
QoGts<-QoGts[!(QoGts$year==1981),]
QoGts<-QoGts[!(QoGts$year==1982),]
QoGts<-QoGts[!(QoGts$year==1983),]
QoGts<-QoGts[!(QoGts$year==1984),]
QoGts<-QoGts[!(QoGts$year==1985),]
QoGts<-QoGts[!(QoGts$year==1986),]
QoGts<-QoGts[!(QoGts$year==1987),]
QoGts<-QoGts[!(QoGts$year==1988),]
QoGts<-QoGts[!(QoGts$year==1989),]
QoGts<-QoGts[!(QoGts$year==1990),]
QoGts<-QoGts[!(QoGts$year==1991),]
QoGts<-QoGts[!(QoGts$year==1992),]
QoGts<-QoGts[!(QoGts$year==1993),]
QoGts<-QoGts[!(QoGts$year==1994),]
QoGts<-QoGts[!(QoGts$year==2016),]
IDEA <- read.xlsx("database.xlsx", 1)
