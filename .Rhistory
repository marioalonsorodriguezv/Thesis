combined_df
logics <- c('TRUE', 'FALSE', 'FALSE')
combined_df <- data.frame(numbers, names, factors, logics, stringsAsFactors = F)
combined_df
library(datasets)
View(Titanic)
View(LakeHuron)
summary(AirPassengers)
View(AirPassengers)
View(discoveries)
View(HairEyeColor)
View(UCBAdmissions)
###Create a number variable
numbers <- c(1, 2, 3)
###Create a character variable
names <- c('dogs', 'cats', 'birds')
###Create a factor variable
factor_names <- c('loyal', 'funny', 'fly')
factors <- factor(numbers, labels = factor_names)
summary(factors)
###Create a logical variable
logics <- c(TRUE, FALSE, FALSE)
###Merge all the vectors into one dataset
combined_df <- data.frame(numbers, names, factors, logics, stringsAsFactors = F)
combined_df
View(d)
###Create a number variable
numbers <- c(1, 2, 3)
###Create a character variable
names <- c('dogs', 'cats', 'birds')
###Create a factor variable
factor_names <- c('loyal', 'funny', 'flying')
factors <- factor(numbers, labels = factor_names)
summary(factors)
###Create a logical variable
logics <- c(TRUE, FALSE, FALSE)
###Merge all the vectors into one dataset
combined_df <- data.frame(numbers, names, factors, logics, stringsAsFactors = F)
combined_df
View(USArrests)
library(ROAuth)
library(twitteR)
library(streamR)
library(stringr)
library(RCurl)
library(maps)
library(devtools)
library(tm)
library(Rfacebook)
library(base64enc)
library(ROAuth)
library(SnowballC)
library(igraph)
requestURL <- "https://api.twitter.com/oauth/request_token"
accessURL <- "https://api.twitter.com/oauth/access_token"
authURL <- "https://api.twitter.com/oauth/authorize"
consumerKey <- "1YbhyroEaYAuzPoKey7iCLBBL"
consumerSecret <- "EBc0proP8Jh1aRxIES9QyGwS2CIMAu5Jc3zrDLQDKIz5y3DM5B"
my_oauth <- OAuthFactory$new(consumerKey=consumerKey,
consumerSecret=consumerSecret, requestURL=requestURL,
accessURL=accessURL, authURL=authURL)
my_oauth$handshake(cainfo = system.file("CurlSSL", "cacert.pem", package = "RCurl"))
accessToken = '735118568120025088-E1MS3g3tyWG6Qba4ltcZ94mJZFQXwoz'
accessSecret = 'BcB6QTmtkIrQhoPhWBjWeLmpxt1KTV5gKfX4c1AumxZS4'
library(twitteR)
setup_twitter_oauth(consumer_key=consumerKey, consumer_secret=consumerSecret,
access_token=accessToken, access_secret=accessSecret)
requestURL <- "https://api.twitter.com/oauth/request_token"
accessURL <- "https://api.twitter.com/oauth/access_token"
authURL <- "https://api.twitter.com/oauth/authorize"
consumerKey <- "1YbhyroEaYAuzPoKey7iCLBBL"
consumerSecret <- "EBc0proP8Jh1aRxIES9QyGwS2CIMAu5Jc3zrDLQDKIz5y3DM5B"
my_oauth <- OAuthFactory$new(consumerKey=consumerKey,
consumerSecret=consumerSecret, requestURL=requestURL,
accessURL=accessURL, authURL=authURL)
my_oauth$handshake(cainfo = system.file("CurlSSL", "cacert.pem", package = "RCurl"))
accessToken = '735118568120025088-E1MS3g3tyWG6Qba4ltcZ94mJZFQXwoz'
accessSecret = 'BcB6QTmtkIrQhoPhWBjWeLmpxt1KTV5gKfX4c1AumxZS4'
library(twitteR)
setup_twitter_oauth(consumer_key=consumerKey, consumer_secret=consumerSecret,
access_token=accessToken, access_secret=accessSecret)
library(streamR)
filterStream(file.name = 'brexitNov.json', track = 'brexit',
timeout = 400, oauth = my_oauth)
brexitTweets2 <- parseTweets('brexitNov.json')
table(brexitTweets2$lang)
languageTable <- table(brexitTweets2$lang)
languageDF <- as.data.frame(languageTable, stringAsFactors = F)
View(languageDF)
View(languageDF)
order(languageDF$Freq, decreasing = T)
View(languageDF)
View(languageDF)
order(languageDF$Freq, decreasing = T)
order(languageDF$Freq, decreasing = T)
languageDF <- languageDF[order(languageDF$Freq, decreasing = T), ]
languageDF
language_top_df <. languageDF[1:10,]
language_top_df <- languageDF[1:10,]
language_top_df <- languageDF[1:10,]
language_top_df
library(ggplot2)
ggplot() + geom_bar(data=language_top_df , aes(x = reorder(Var1, Freq), y= Freq), stat="identity") +
theme_bw()+xlab(NULL) +
theme(axis.text.x=element_text(angle=90,size=14))
table(brexitTweets2$source)
sum(!is.na(brexitTweets2$lat))
table(brexitTweets2$country)
summary(brexitTweets2$retweet_count)
brexitTweets2$text[which.max(brexitTweets2$retweet_count)]
lenght(unique(brexitTweets2$screen_name))
length(unique(brexitTweets2$screen_name))
unique(brexitTweets2$screen_name)
uniqueUsers <- unique(brexitTweets2$screen_name)
write.csv(uniqueUsers, file = 'uniqueUsersbrexit.csv')
uniqueUsers
uniqueUsers <- as.data.frame(uniqueUsers, stringAsFactors = F)
uniqueUsers
uniqueUsersbrexit.csv
uniqueUsers <- unique(brexitTweets2$screen_name)
uniqueUsers
uniqueUsers <- as.data.frame(languageTable, stringAsFactors = F)
uniqueUsers
uniqueUsers <- as.data.frame(uniqueUsers, stringAsFactors = F)
uniqueUsers
uniqueUsers <- unique(brexitTweets2$screen_name)
uniqueUsers <- as.data.frame(uniqueUsers, stringAsFactors = F)
uniqueUsers
order(uniqueUsers$Freq, decreasing = T)
order(uniqueUsers$Freq, decreasing = T)
write.csv(uniqueUsers, file = 'uniqueUsersbrexit.csv')
uniqueUsers <- as.data.frame(uniqueUsers, stringAsFactors = F)
uniqueUsers
table(brexitTweets2$unique_users)
brexitTweets2
View(brexitTweets2)
table(brexitTweets2$screen_name)
userTable <- table(brexitTweets2$screen_name)
table(brexitTweets2$screen_name)
userTable <- table(brexitTweets2$screen_name)
userDF <- as.data.frame(userTable, stringAsFactors = F)
order(userDF$Freq, decreasing = T)
userDF <- userDF[order(languageDF$Freq, decreasing = T), ]
table(brexitTweets2$screen_name)
userTable <- table(brexitTweets2$screen_name)
userDF <- as.data.frame(userTable, stringAsFactors = F)
order(userDF$Freq, decreasing = T)
userDF <- userDF[order(userDF$Freq, decreasing = T), ]
userDF
userDF
userDF
user_top_df <- userDF[1:20,]
user_top_df
ggplot() + geom_bar(data=language_top_df , aes(x = reorder(Var1, Freq), y= Freq), stat="identity") +
theme_bw()+xlab(NULL) +
theme(axis.text.x=element_text(angle=90,size=14))
ggplot() + geom_bar(data=user_top_df, aes(x = reorder(Var1, Freq), y= Freq), stat="identity") +
theme_bw()+xlab(NULL) +
theme(axis.text.x=element_text(angle=90,size=14))
GINI <- WDI(country = 'all', start = '2010', end = '2010', indicator = c('SI.POV.GINI', 'NY.GDP.PCAP.CD'), extra = TRUE)
library(WDI)
library(countrycode)
library(rio)
library(stargazer)
library(ggplot2)
GINI <- WDI(country = 'all', start = '2010', end = '2010', indicator = c('SI.POV.GINI', 'NY.GDP.PCAP.CD'), extra = TRUE)
View(GINI)
GINI <- WDI(country = 'all', start = '2010', end = '2010', indicator = c('SI.POV.GINI', 'NY.GDP.PCAP.CD'), extra = TRUE)
View(GINI)
library(WDI)
library(countrycode)
library(rio)
library(stargazer)
library(ggplot2)
GINI <- WDI(country = 'all', start = '2010', end = '2010', indicator = c('SI.POV.GINI', 'NY.GDP.PCAP.CD'), extra = TRUE)
CO2 <- import('http://edgar.jrc.ec.europa.eu/news_docs/CO2_per_capita_1970-2014_dataset_of_CO2_report_2015.xls')
CO2 <- CO2[-c(1:13), ]
names(CO2)[42] <- "CO2010"
names(CO2)[names(CO2)=="Global per capita CO2 emissions from fossil fuel use and cement production 1970-2014"] <- "country"
CO2$iso2c <- countrycode(CO2$country, 'country.name', 'iso2c', warn = TRUE)
CO2 <- CO2[, c('iso2c', 'CO2010')]
View(GINI)
names(GINI)[names(GINI)=="SI.POV.GINI"] <- "GiniCoeff"
names(GINI)[names(GINI)=="NY.GDP.PCAP.CD"] <- "GDPperCapita"
GINI$iso2c <- as.character(GINI$iso2c)
GINI <- GINI[, c('iso2c', 'country', 'GiniCoeff', 'GDPperCapita', 'Income')]
GINI <- GINI[, c('iso2c', 'country', 'GiniCoeff', 'GDPperCapita', 'income')]
Combined <- merge(GINI, CO2, by = c('iso2c'))
View(Combined)
Combined <- Combined[complete.cases(Combined),]
stargazer(Combined, type = 'text')
ggplot(data = Combined, aes(x = CO2010,
y = GiniCoeff)) + geom_point(aes(colour = income)) + theme_bw()
m1 <- lm(CO2010 ~ GiniCoeff, Combined)
m2 <- lm(CO2010 ~ GiniCoeff + GDPperCapita, Combined)
stargazer(m1, m2, type = 'text')
library(ROAuth)
library(twitteR)
library(streamR)
library(stringr)
library(RCurl)
library(maps)
library(devtools)
library(ggplot2)
library(tm)
library(SnowballC)
library(igraph)
library(Rfacebook)
requestURL <- "https://api.twitter.com/oauth/request_token"
accessURL <- "https://api.twitter.com/oauth/access_token"
authURL <- "https://api.twitter.com/oauth/authorize"
consumerKey <- "1YbhyroEaYAuzPoKey7iCLBBL"
consumerSecret <- "EBc0proP8Jh1aRxIES9QyGwS2CIMAu5Jc3zrDLQDKIz5y3DM5B"
my_oauth <- OAuthFactory$new(consumerKey=consumerKey,
consumerSecret=consumerSecret, requestURL=requestURL,
accessURL=accessURL, authURL=authURL)
my_oauth$handshake(cainfo = system.file("CurlSSL", "cacert.pem", package = "RCurl"))
accessToken = '735118568120025088-E1MS3g3tyWG6Qba4ltcZ94mJZFQXwoz'
accessSecret = 'BcB6QTmtkIrQhoPhWBjWeLmpxt1KTV5gKfX4c1AumxZS4'
library(twitteR)
setup_twitter_oauth(consumer_key=consumerKey, consumer_secret=consumerSecret,
access_token=accessToken, access_secret=accessSecret)
FamilyTweets <- searchTwitter('todossomosfamilia', n=300)
FamilyTweets <- twListToDF(FamilyTweets)
write.csv(FamilyTweets, "FamilyTweetsDEMO.csv")
FamilyTweets$created
filterStream(file.name="familia.json", track="todossomosfamilia",
timeout=100, oauth=my_oauth)
View(FamilyTweets)
FamilyTweets2 <- parseTweets("familia.json")
filterStream(file.name="familia.json", track="todossomosfamilia",
timeout=300, oauth=my_oauth)
FamilyTweets <- searchTwitter('todossomosfamilia', n=3000)
filterStream(file.name='familia2.json', track = 'todossomosfamilia', 'defendemoslafamilia'
timeout = 0, oauth=my_oauth)
filterStream(file.name='familia2.json', track = c('todossomosfamilia', 'defendemoslafamilia'),
timeout=36000, oauth=my_oauth)
FamilyTweets10hrs <- parseTweets("familia2.json")
FamilyTweets10hrs
View(FamilyTweets10hrs)
FamilyTweets30k <- searchTwitter(c=('todossomosfamilia', 'defendemoslafamilia',) n=30000)
FamilyTweets30k <- searchTwitter(c=('todossomosfamilia', 'defendemoslafamilia',) n=30000)
FamilyTweets30k <- searchTwitter(c=('todossomosfamilia' 'defendemoslafamilia') n=30000)
FamilyTweets30k <- searchTwitter(c=('todossomosfamilia', 'defendemoslafamilia'), n=30000)
FamilyTweets30k <- searchTwitter(c=('todossomosfamilia', 'defendemoslafamilia',), n=30000)
FamilyTweets30k <- searchTwitter('todossomosfamilia', n=30000)
FamilyTweets30k
AntiFamilyTweets30k <- searchTwitter('defendemoslafamilia', n=30000)
AntiFamilyTweets30k
View(AntiFamilyTweets30k)
AntiFamilyTweets30k <- twListToDF(AntiFamilyTweets30k)
View(AntiFamilyTweets30k)
library(ROAuth)
library(twitteR)
library(streamR)
library(stringr)
library(RCurl)
library(maps)
library(devtools)
library(tm)
library(Rfacebook)
library(base64enc)
library(ROAuth)
library(SnowballC)
library(igraph)
requestURL <- "https://api.twitter.com/oauth/request_token"
accessURL <- "https://api.twitter.com/oauth/access_token"
authURL <- "https://api.twitter.com/oauth/authorize"
consumerKey <- "1YbhyroEaYAuzPoKey7iCLBBL"
consumerSecret <- "EBc0proP8Jh1aRxIES9QyGwS2CIMAu5Jc3zrDLQDKIz5y3DM5B"
my_oauth <- OAuthFactory$new(consumerKey=consumerKey,
consumerSecret=consumerSecret, requestURL=requestURL,
accessURL=accessURL, authURL=authURL)
my_oauth$handshake(cainfo = system.file("CurlSSL", "cacert.pem", package = "RCurl"))
accessToken = '735118568120025088-E1MS3g3tyWG6Qba4ltcZ94mJZFQXwoz'
accessSecret = 'BcB6QTmtkIrQhoPhWBjWeLmpxt1KTV5gKfX4c1AumxZS4'
setup_twitter_oauth(consumer_key=consumerKey, consumer_secret=consumerSecret,
access_token=accessToken, access_secret=accessSecret)
TweetsMinWage <- searchTwitter('#Fightfor15', n=300000)
library(WDI)
library(countrycode)
library(xlsx)
library(repmis)
library(tidyr)
library(WDI)
library(XML)
library(plyr)
library(plm)
library(stargazer)
library(ggplot2)
library(plotly)
library(plm)
library(googleVis)
library(reshape2)
library(foreign)
library(calibrate)
library(rworldmap)
library(magrittr)
possible_dir <- c('/Users/alvarolopezguiresse/GoogleDrive/[] ADMINISTRACION PUBLICA/tesis/Thesis', '/Users/mariorodriguez/Desktop/Thesis')
repmis::set_valid_wd(possible_dir)
AnalisisRCompleta <- read.csv("AnalisisRCompleta.csv")
AnalisisRCompleta <- AnalisisRCompleta[,-(1)]
AnalisisRCompleta$IDEARecoded <- AnalisisRCompleta$idea_pct * 100
AnalisisR2015 <- AnalisisRCompleta[(AnalisisRCompleta$year=="2015"),]
n <- joinCountryData2Map(AnalisisR2015, joinCode="ISO3", nameJoinColumn="iso3c")
mapCountryData(n, nameColumnToPlot="idea_pct", mapTitle="Political Finance Regulation Index 2015 (World)", colourPalette = 'heatmap', catMethod = "pretty")
mapCountryData(n, nameColumnToPlot="idea_pct", mapTitle="Political Finance Regulation Index 2015 (World)", colourPalette = 'heat', catMethod = "pretty")
AnalisisAL <- read.csv('AnalisisAL.csv')
AnalisisAL2006 <- AnalisisAL[(AnalisisAL$year=="2006"),]
AnalisisAL2015 <- AnalisisAL[(AnalisisAL$year=="2015"),]
View(AnalisisAL)
wefji <- read.csv('WEFJudicialIndependence.csv')
View(wefji)
n2 <- joinCountryData2Map(AnalisisAL2015, joinCode="ISO3", nameJoinColumn="iso3c")
mapCountryData(n2, nameColumnToPlot="idea_pct", mapTitle="Political Finance Regulation Index 2015 (Latin America)", mapRegion="latin america", colourPalette = "heat")
p2006 <- plot_ly(AnalisisAL2006, x = ~idea_pct, y = ~CoCRecoded, color = ~wefji, size = ~wefji,
text= ~iso3c, type='scatter', mode= 'markers', title="Effect of Political Finance Regulation on Control of Corruption 2006") %>%
add_annotations(x = AnalisisAL2006$idea_pct,
y = AnalisisAL2006$CoCRecoded,
text = rownames(AnalisisAL2006$iso3c),
xref = "x",
yref = "y",
showarrow = T,
arrowhead = 4,
arrowsize = .5,
ax = 20,
ay = -40) %>%
layout(title ='Party Finance Reform and Control of Corruption 2006',
xaxis = list(title='Political Finance Regulation'),
yaxis = list(title='Control of Corruption'))
p2006
AnalisisAL <- read.csv("AnalisisAL.csv")
AnalisisAL <- AnalisisAL[,-(1)]
AnalisisAL$CoCRecoded <- AnalisisAL$CoC + 2.5
AnalisisAL$CoCRecoded <- AnalisisAL$CoCRecoded * 2
AnalisisAL$IDEARecoded <- AnalisisAL$idea_pct * 100
write.csv(AnalisisAL, 'AnalisisAL.csv')
AnalisisAL <- read.csv('AnalisisAL.csv')
AnalisisAL2006 <- AnalisisAL[(AnalisisAL$year=="2006"),]
p2006 <- plot_ly(AnalisisAL2006, x = ~idea_pct, y = ~CoCRecoded, color = ~wefji, size = ~wefji,
text= ~iso3c, type='scatter', mode= 'markers', title="Effect of Political Finance Regulation on Control of Corruption 2006") %>%
add_annotations(x = AnalisisAL2006$idea_pct,
y = AnalisisAL2006$CoCRecoded,
text = rownames(AnalisisAL2006$iso3c),
xref = "x",
yref = "y",
showarrow = T,
arrowhead = 4,
arrowsize = .5,
ax = 20,
ay = -40) %>%
layout(title ='Party Finance Reform and Control of Corruption 2006',
xaxis = list(title='Political Finance Regulation'),
yaxis = list(title='Control of Corruption'))
p2006
p2006 <- plot_ly(AnalisisAL2006, x = ~idea_pct, y = ~CoCRecoded, color = ~wefji, size = ~wefji,
text= ~iso3c, type='scatter', mode= 'markers', title="Effect of Political Finance Regulation on Control of Corruption 2006") %>%
add_annotations(x = AnalisisAL2006$idea_pct,
y = AnalisisAL2006$CoCRecoded,
text = rownames(AnalisisAL2006$iso3c),
xref = "x",
yref = "y",
showarrow = T,
arrowhead = 4,
arrowsize = .5,
ax = 20,
ay = -40) %>%
layout(title ='Party Finance Reform and Control of Corruption 2006',
xaxis = list(title='Political Finance Regulation', zeroline = TRUE),
yaxis = list(title='Control of Corruption', zeroline = TRUE))
p2006
p2006 <- plot_ly(AnalisisAL2006, x = ~idea_pct, y = ~CoCRecoded, color = ~wefji, size = ~wefji,
text= ~iso3c, type='scatter', mode= 'markers', title="Effect of Political Finance Regulation on Control of Corruption 2006") %>%
add_annotations(x = AnalisisAL2006$idea_pct,
y = AnalisisAL2006$CoCRecoded,
text = rownames(AnalisisAL2006$iso3c),
xref = "x",
yref = "y",
showarrow = T,
arrowhead = 4,
arrowsize = .5,
ax = 20,
ay = -40) %>%
layout(title ='Party Finance Reform and Control of Corruption 2006',
xaxis = list(title='Political Finance Regulation', zeroline = F),
yaxis = list(title='Control of Corruption', zeroline = F))
p2006
AnalisisAL2015 <- AnalisisAL[(AnalisisAL$year=="2015"),]
p <- plot_ly(AnalisisAL2015, x = ~idea_pct, y = ~CoCRecoded, color = ~wefji, size = ~wefji,
text= ~iso3c, type='scatter', mode= 'markers',
title="Effect of Political Finance Regulation on Control of Corruption 2006") %>%
add_annotations(x = AnalisisAL2015$idea_pct,
y = AnalisisAL2015$CoCRecoded,
text = rownames(AnalisisAL2015$iso3c),
xref = "x",
yref = "y",
showarrow = TRUE,
ax = 20,
ay = -40) %>%
layout(title ='Party Finance Reform and Control of Corruption 2015',
xaxis = list(title='Political Finance Regulation'),
yaxis = list(title='Control of Corruption'))
p
p <- plot_ly(AnalisisAL2015, x = ~idea_pct, y = ~CoCRecoded, color = ~wefji, size = ~wefji,
text= ~iso3c, type='scatter', mode= 'markers',
title="Effect of Political Finance Regulation on Control of Corruption 2006") %>%
add_annotations(x = AnalisisAL2015$idea_pct,
y = AnalisisAL2015$CoCRecoded,
text = rownames(AnalisisAL2015$iso3c),
xref = "x",
yref = "y",
showarrow = TRUE,
ax = 20,
ay = -40) %>%
layout(title ='Party Finance Reform and Control of Corruption 2015',
xaxis = list(title='Political Finance Regulation'),
yaxis = list(title='Control of Corruption'), autosize = F)
p
p2006 <- plot_ly(AnalisisAL2006, x = ~idea_pct, y = ~CoCRecoded, color = ~wefji, size = ~wefji,
text= ~iso3c, type='scatter', mode= 'markers', title="Effect of Political Finance Regulation on Control of Corruption 2006") %>%
add_annotations(x = AnalisisAL2006$idea_pct,
y = AnalisisAL2006$CoCRecoded,
text = rownames(AnalisisAL2006$iso3c),
xref = "x",
yref = "y",
showarrow = T,
arrowhead = 4,
arrowsize = .5,
ax = 20,
ay = -40) %>%
layout(title ='Party Finance Reform and Control of Corruption 2006',
xaxis = list(title='Political Finance Regulation', zeroline = F),
yaxis = list(title='Control of Corruption', zeroline = F, autosize = F))
p2006
p2006 <- plot_ly(AnalisisAL2006, x = ~idea_pct, y = ~CoCRecoded, color = ~wefji, size = ~wefji,
text= ~iso3c, type='scatter', mode= 'markers', title="Effect of Political Finance Regulation on Control of Corruption 2006") %>%
add_annotations(x = AnalisisAL2006$idea_pct,
y = AnalisisAL2006$CoCRecoded,
text = rownames(AnalisisAL2006$iso3c),
xref = "x",
yref = "y",
showarrow = T,
arrowhead = 4,
arrowsize = .5,
ax = 20,
ay = -40) %>%
layout(title ='Party Finance Reform and Control of Corruption 2006',
xaxis = list(title='Political Finance Regulation',
yaxis = listtitle='Control of Corruption', autosize = F))
p2006
p2006 <- plot_ly(AnalisisAL2006, x = ~idea_pct, y = ~CoCRecoded, color = ~wefji, size = ~wefji,
text= ~iso3c, type='scatter', mode= 'markers', title="Effect of Political Finance Regulation on Control of Corruption 2006") %>%
add_annotations(x = AnalisisAL2006$idea_pct,
y = AnalisisAL2006$CoCRecoded,
text = rownames(AnalisisAL2006$iso3c),
xref = "x",
yref = "y",
showarrow = T,
arrowhead = 4,
arrowsize = .5,
ax = 20,
ay = -40) %>%
layout(title ='Party Finance Reform and Control of Corruption 2006',
xaxis = list(title='Political Finance Regulation'),
yaxis = listtitle=('Control of Corruption'), autosize = F))
p2006
p2006 <- plot_ly(AnalisisAL2006, x = ~idea_pct, y = ~CoCRecoded, color = ~wefji, size = ~wefji,
text= ~iso3c, type='scatter', mode= 'markers', title="Effect of Political Finance Regulation on Control of Corruption 2006") %>%
add_annotations(x = AnalisisAL2006$idea_pct,
y = AnalisisAL2006$CoCRecoded,
text = rownames(AnalisisAL2006$iso3c),
xref = "x",
yref = "y",
showarrow = T,
arrowhead = 4,
arrowsize = .5,
ax = 20,
ay = -40) %>%
layout(title ='Party Finance Reform and Control of Corruption 2006',
xaxis = list(title='Political Finance Regulation'),
yaxis = listtitle=('Control of Corruption'), autosize = F)
p2006 <- plot_ly(AnalisisAL2006, x = ~idea_pct, y = ~CoCRecoded, color = ~wefji, size = ~wefji,
text= ~iso3c, type='scatter', mode= 'markers', title="Effect of Political Finance Regulation on Control of Corruption 2006") %>%
add_annotations(x = AnalisisAL2006$idea_pct,
y = AnalisisAL2006$CoCRecoded,
text = rownames(AnalisisAL2006$iso3c),
xref = "x",
yref = "y",
showarrow = T,
arrowhead = 4,
arrowsize = .5,
ax = 20,
ay = -40) %>%
layout(title ='Party Finance Reform and Control of Corruption 2006',
xaxis = list(title='Political Finance Regulation'),
yaxis = list(title='Control of Corruption'), autosize = F)
p2006
p <- plot_ly(AnalisisAL2015, x = ~idea_pct, y = ~CoCRecoded, color = ~wefji, size = ~wefji,
text= ~iso3c, type='scatter', mode= 'markers',
title="Effect of Political Finance Regulation on Control of Corruption 2006") %>%
add_annotations(x = AnalisisAL2015$idea_pct,
y = AnalisisAL2015$CoCRecoded,
text = rownames(AnalisisAL2015$iso3c),
xref = "x",
yref = "y",
showarrow = TRUE,
ax = 20,
ay = -40) %>%
layout(title ='Party Finance Reform and Control of Corruption 2015',
xaxis = list(title='Political Finance Regulation'),
yaxis = list(title='Control of Corruption'), autosize = F)
p
